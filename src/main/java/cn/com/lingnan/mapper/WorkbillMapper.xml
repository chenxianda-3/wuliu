<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.lingnan.mapper.WorkbillMapper" >
  <resultMap id="BaseResultMap" type="cn.com.lingnan.pojo.Workbill" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="noticebill_id" property="noticebillId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="pickstate" property="pickstate" jdbcType="CHAR" />
    <result column="buildtime" property="buildtime" jdbcType="DATE" />
    <result column="attachbilltimes" property="attachbilltimes" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="pickaddress" property="pickaddress" jdbcType="VARCHAR" />
    <result column="picktime" property="picktime" jdbcType="DATE" />
    <result column="station" property="station" jdbcType="VARCHAR" />
  
      <association property="noticebill" javaType="Noticebill">
       <id column="nid" property="id" jdbcType="VARCHAR" />
      <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
      <result column="telephone" property="telephone" jdbcType="VARCHAR" />
       <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="delegater" property="delegater" jdbcType="VARCHAR" />
    </association>
        	<!-- 与取派员一对一 -->
 	<association property="staff" javaType="Staff">
        <result column="name" property="name" jdbcType="VARCHAR" />
 	</association>
 	
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, noticebill_id, type, pickstate, buildtime, attachbilltimes, remark, staff_id, 
    pickaddress, picktime, station
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.lingnan.pojo.WorkbillExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from workbill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from workbill
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from workbill
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.lingnan.pojo.WorkbillExample" >
    delete from workbill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.lingnan.pojo.Workbill" >
    insert into workbill (id, noticebill_id, type, 
      pickstate, buildtime, attachbilltimes, 
      remark, staff_id, pickaddress, 
      picktime, station)
    values (#{id,jdbcType=VARCHAR}, #{noticebillId,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{pickstate,jdbcType=CHAR}, #{buildtime,jdbcType=DATE}, #{attachbilltimes,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, #{pickaddress,jdbcType=VARCHAR}, 
      #{picktime,jdbcType=DATE}, #{station,jdbcType=VARCHAR})
  </insert>
  
      <insert id="insertBatch" parameterType="java.util.List"> 
      insert into workbill (id, noticebill_id, type,pickstate, buildtime, attachbilltimes, remark, staff_id, pickaddress, picktime, station)
    values
      <foreach collection="list" item="item" separator=",">
      	(#{item.id,jdbcType=VARCHAR}, #{item.noticebillId,jdbcType=VARCHAR}, #{item.type,jdbcType=CHAR}, 
      #{item.pickstate,jdbcType=CHAR}, #{item.buildtime,jdbcType=DATE}, #{item.attachbilltimes,jdbcType=INTEGER}, 
      #{item.remark,jdbcType=VARCHAR}, #{item.staffId,jdbcType=VARCHAR}, #{item.pickaddress,jdbcType=VARCHAR}, 
      #{item.picktime,jdbcType=DATE}, #{station,jdbcType=VARCHAR})
      	</foreach>
  		ON DUPLICATE KEY UPDATE
  		  id=VALUES(id),  noticebill_id=VALUES(noticebill_id),  type=VALUES(type),  
  		  pickstate=VALUES(pickstate),  buildtime=VALUES(buildtime),  attachbilltimes=VALUES(attachbilltimes),  
  		  remark=VALUES(remark),  staff_id=VALUES(staff_id),  pickaddress=VALUES(pickaddress),  picktime=VALUES(picktime),station=VALUES(station)
  		</insert>
  
  
  <insert id="insertSelective" parameterType="cn.com.lingnan.pojo.Workbill" >
    insert into workbill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="noticebillId != null" >
        noticebill_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="pickstate != null" >
        pickstate,
      </if>
      <if test="buildtime != null" >
        buildtime,
      </if>
      <if test="attachbilltimes != null" >
        attachbilltimes,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
      <if test="pickaddress != null" >
        pickaddress,
      </if>
      <if test="picktime != null" >
        picktime,
      </if>
      <if test="station != null" >
        station,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="noticebillId != null" >
        #{noticebillId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="pickstate != null" >
        #{pickstate,jdbcType=CHAR},
      </if>
      <if test="buildtime != null" >
        #{buildtime,jdbcType=DATE},
      </if>
      <if test="attachbilltimes != null" >
        #{attachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="pickaddress != null" >
        #{pickaddress,jdbcType=VARCHAR},
      </if>
      <if test="picktime != null" >
        #{picktime,jdbcType=DATE},
      </if>
      <if test="station != null" >
        #{station,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.lingnan.pojo.WorkbillExample" resultType="java.lang.Integer" >
    select count(*) from workbill
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
    <select id="selectWorkbill" resultMap="BaseResultMap"  parameterType="cn.com.lingnan.pojo.Workbill">
  
  SELECT   w.*,n.telephone,n.customer_name,s.name
FROM workbill w LEFT JOIN  noticebill n ON  w.noticebill_id=n.id LEFT JOIN staff s ON w.staff_id=s.id where w.station like "%"#{station}"%"
  <where>
    <if test="noticebill!=null and noticebill.telephone!=null and noticebill.telephone!='' ">
    and n.telephone=#{noticebill.telephone}
    </if>
    <if test="buildtime!=null and buildtime!=''">
    and w.buildtime=#{buildtime}
    </if>
    <if test="staff!=null and staff.name!=null and staff.name!=''">
    and s.name=#{staff.name}
    </if>
     <if test="staff!=null and staff.id!=null and staff.id!=''">
    and s.id=#{staff.id}
    </if>
    
    </where>
  
  </select>
  
  
      <select id="selectDiaoDu" resultMap="BaseResultMap"  parameterType="cn.com.lingnan.pojo.Workbill">
  
  SELECT   w.*,n.telephone,n.customer_name,s.name
FROM workbill w LEFT JOIN  noticebill n ON  w.noticebill_id=n.id LEFT JOIN staff s ON w.staff_id=s.id
where w.staff_id is null and w.station like "%"#{station}"%"
  
  </select>
  
  
      <select id="selectWorkbillById" resultMap="BaseResultMap"  parameterType="cn.com.lingnan.pojo.Workbill">
  
  SELECT   w.*,n.id as nid,n.telephone,n.customer_name,n.delegater,n.remark,s.name
FROM workbill w LEFT JOIN  noticebill n ON  w.noticebill_id=n.id LEFT JOIN staff s ON w.staff_id=s.id
 where w.id=#{id}
  
  </select>
  
  
  <update id="updateByExampleSelective" parameterType="map" >
    update workbill
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.noticebillId != null" >
        noticebill_id = #{record.noticebillId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.pickstate != null" >
        pickstate = #{record.pickstate,jdbcType=CHAR},
      </if>
      <if test="record.buildtime != null" >
        buildtime = #{record.buildtime,jdbcType=DATE},
      </if>
      <if test="record.attachbilltimes != null" >
        attachbilltimes = #{record.attachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.staffId != null" >
        staff_id = #{record.staffId,jdbcType=VARCHAR},
      </if>
      <if test="record.pickaddress != null" >
        pickaddress = #{record.pickaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.picktime != null" >
        picktime = #{record.picktime,jdbcType=DATE},
      </if>
      <if test="record.station != null" >
        station = #{record.station,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update workbill
    set id = #{record.id,jdbcType=VARCHAR},
      noticebill_id = #{record.noticebillId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      pickstate = #{record.pickstate,jdbcType=CHAR},
      buildtime = #{record.buildtime,jdbcType=DATE},
      attachbilltimes = #{record.attachbilltimes,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      staff_id = #{record.staffId,jdbcType=VARCHAR},
      pickaddress = #{record.pickaddress,jdbcType=VARCHAR},
      picktime = #{record.picktime,jdbcType=DATE},
      station = #{record.station,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.lingnan.pojo.Workbill" >
    update workbill
    <set >
      <if test="noticebillId != null" >
        noticebill_id = #{noticebillId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="pickstate != null" >
        pickstate = #{pickstate,jdbcType=CHAR},
      </if>
      <if test="buildtime != null" >
        buildtime = #{buildtime,jdbcType=DATE},
      </if>
      <if test="attachbilltimes != null" >
        attachbilltimes = #{attachbilltimes,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="pickaddress != null" >
        pickaddress = #{pickaddress,jdbcType=VARCHAR},
      </if>
      <if test="picktime != null" >
        picktime = #{picktime,jdbcType=DATE},
      </if>
      <if test="station != null" >
        station = #{station,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.lingnan.pojo.Workbill" >
    update workbill
    set noticebill_id = #{noticebillId,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      pickstate = #{pickstate,jdbcType=CHAR},
      buildtime = #{buildtime,jdbcType=DATE},
      attachbilltimes = #{attachbilltimes,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=VARCHAR},
      pickaddress = #{pickaddress,jdbcType=VARCHAR},
      picktime = #{picktime,jdbcType=DATE},
      station = #{station,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>